/**
 * This file is AUTO GENERATED by [msw-auto-mock](https://github.com/zoubingwu/msw-auto-mock)
 * Feel free to commit/edit it as you need.
 */
/* eslint-disable */
/* tslint:disable */
import { setupWorker, rest } from "msw";
import { faker } from "@faker-js/faker";

faker.seed(1);

const baseURL = "http://localhost:3000";
const MAX_ARRAY_LENGTH = 20;

let i = 0;
const next = () => {
  if (i === Number.MAX_SAFE_INTEGER - 1) {
    i = 0;
  }
  return i++;
};

export const handlers = [
  rest.get(`${baseURL}/blogs`, (req, res, ctx) => {
    const resultArray = [
      [
        ctx.status(200),
        ctx.json(
          [
            ...new Array(
              faker.datatype.number({ max: MAX_ARRAY_LENGTH })
            ).keys(),
          ].map((_) => ({
            id: 1,
            title: "Rubyについて",
            contents:
              "Rubyというプログラミング言語は、1995年にまつもとゆきひろ氏によって作成されました。",
            created_at: "2022-07-05T00:09:40.705+09:00",
            updated_at: "2022-07-05T00:09:40.705+09:00",
          }))
        ),
      ],
    ];

    return res(...resultArray[next() % resultArray.length]);
  }),
  rest.post(`${baseURL}/blogs`, (req, res, ctx) => {
    const resultArray = [
      [
        ctx.status(201),
        ctx.json({
          id: 1,
          title: "Rubyについて",
          contents:
            "Rubyというプログラミング言語は、1995年にまつもとゆきひろ氏によって作成されました。",
          created_at: "2022-07-05T00:09:40.705+09:00",
          updated_at: "2022-07-05T00:09:40.705+09:00",
        }),
      ],
    ];

    return res(...resultArray[next() % resultArray.length]);
  }),
  rest.get(`${baseURL}/health_check`, (req, res, ctx) => {
    const resultArray = [[ctx.status(200), ctx.json(null)]];

    return res(...resultArray[next() % resultArray.length]);
  }),
  rest.get(`${baseURL}/blogs/:id`, (req, res, ctx) => {
    const resultArray = [
      [
        ctx.status(200),
        ctx.json({
          id: 1,
          title: "Rubyについて",
          contents:
            "Rubyというプログラミング言語は、1995年にまつもとゆきひろ氏によって作成されました。",
          created_at: "2022-07-05T00:09:40.705+09:00",
          updated_at: "2022-07-05T00:09:40.705+09:00",
        }),
      ],
    ];

    return res(...resultArray[next() % resultArray.length]);
  }),
];

// This configures a Service Worker with the given request handlers.
export const startWorker = () => {
  if (typeof window === "undefined") {
    const { setupServer } = require("msw/node");
    const server = setupServer(...handlers);
    server.listen();
  } else {
    const worker = setupWorker(...handlers);
    worker.start();
  }
};
